// Accepts n (int) and k (int) from standard input and writes the sum 1^k + 2^k + 3^k + ... + n^k to standard output.

// Returns a^b computed recursively.
int pow(int a, int b) {
    if (b == 0) {
        return 1;
    }
    return a * pow(a, b - 1);
}

// Returns the sum 1^k + 2^k + 3^k + ... + n^k.
int sumOfPowers(int n, int k) {
    int result = 0;
    int i = 1;
    while (i <= n) {
        result = result + pow(i, k);
        i = i + 1;
    }
    return result;
}

// Entry point.
void main() {
    int n = read();
    int k = read();
    write(sumOfPowers(n, k));
}